#!/usr/bin/env bash

# Settings/Utilities
# ------------------

set -e
set -u

top_dir="$(pwd)"
build_dir="$top_dir/.build"
include_dir="$build_dir/include"
lib_dir="$build_dir/lib"
contrib_dir="contrib"

cvc4_dir="src/SMT/cvc4"
pandoc_tangle_dir="$contrib_dir/pandoc-tangle"

export PATH="/usr/lib/ccache/bin:$PATH"
export PATH="/usr/lib/ccache:$PATH"

# Functionality
# -------------

build_clean() {
    rm -rf "$build_dir"
    make clean || true
    git clean -dfx
    [[ ! -f "$cvc4_dir/Makefile" ]] \
        || ( cd "$cvc4_dir"
             make distclean
           )
    ( cd "$contrib_dir"
      make clean
    )
}

build_deps() {
    git submodule update --init -- "$cvc4_dir" "$pandoc_tangle_dir"
}

build_maude() {
    aclocal
    autoconf
    autoheader
    automake --add-missing
    automake

    ./configure CXXFLAGS="-I$include_dir -L$lib_dir" "$@"
    make -s -j4 \
        || ( git checkout -- src/Mixfix/surface.cc
             make -s -j4
           )
}

build_tangle() {
    (   cd "$contrib_dir"
        make all
    )
}

build_test() {
    local test_file_name test_name test_dir exit_status
    test_file_name="$1" && shift
    exit_status='0'

    test_name="$(basename "$test_file_name")"
    test_dir="$(dirname "$test_file_name")"

    build_tangle

    {   cd "$test_dir"
        if ! make check TESTS=$test_name ; then
            git --no-pager diff --no-index $test_name.{expected,out}
            exit_status='1'
        fi
    }
    exit "$exit_status"
}

build_test_all() {
    build_clean
    build_deps
    build_maude
    build_tangle
    make check "$@"
    git checkout -- src/Mixfix/tokenizer.cc
}

# Main
# ----

build_command="$1" ; shift
case "$build_command" in
    clean)    build_clean    "$@" ;;
    deps)     build_deps     "$@" ;;
    maude)    build_maude    "$@" ;;
    tangle)   build_tangle   "$@" ;;
    test)     build_test     "$@" ;;
    test-all) build_test_all "$@" ;;
    *)      echo "
    usage: $0 [clean|deps|tangle]
           $0 maude <options>
           $0 test  <test-name>

    $0 clean:            remove build directory '$build_dir', and call 'make clean'.
    $0 deps:             clone git submodules and build CVC4.
    $0 maude <options>:  build maude passing <options> to the ./configure step.
    $0 tangle:           generate '*.maude' files from '*.md' files in '$contrib_dir'.

    developers: $0 test <test-name>
                $0 test-all

    $0 test <test-path>: run test at <test-path> (eg. tests/tools/fvp/numbers).
    $0 test-all:         Clean build and test for CI servers.
" ;;
esac
