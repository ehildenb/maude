load ../theories/numbers.maude

fmod BAKERY-STATE is
  pr FVP-NAT-PRED .
  sort Conf .
  sort Mode ModeWait ModeIdle .
  subsort ModeIdle ModeWait < Mode .
  sort ProcIdle ProcWait Proc ProcSet .
  subsort ProcIdle ProcWait < Proc < ProcSet .

  op idle  :                 -> ModeIdle [ctor] .
  op wait  : Nat             -> ModeWait [ctor] .
  op crit  : Nat             -> Mode     [ctor] .
  op [_,_] : Nat ModeIdle    -> ProcIdle [ctor] .
  op [_,_] : Nat ModeWait    -> ProcWait [ctor] .
  op [_,_] : Nat Mode        -> Proc     [ctor] .
  op none  :                 -> ProcSet  [ctor] .
  op __    : ProcSet ProcSet -> ProcSet  [ctor assoc comm id: none] .

endfm

mod REVERSE-BAKERY is
  pr BAKERY-STATE .

  var N M I : Nat . var S : ProcSet .

  sort State .
  op _;_;_ : Nat Nat ProcSet -> Conf [ctor] .
  op <_>   : Conf -> State [ctor] .

  rl [wake] : < N + 1 ; M     ; [I,wait(N)] S > => < N ; M ; [I,idle   ] S > .
  rl [crit] : < N     ; M     ; [I,crit(M)] S > => < N ; M ; [I,wait(M)] S > .
  rl [exit] : < N     ; M + 1 ; [I,idle   ] S > => < N ; M ; [I,crit(M)] S > .
endm

mod REVERSE-BAKERY-stop is pr REVERSE-BAKERY .
  op [_] : Conf -> State [ctor] .
  rl [term] : < C:Conf > => [ C:Conf ] .
endm

