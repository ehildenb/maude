==========================================
reduce in RLTOOL : applyMatchToCond(upModule('DUMB-COMM-PROTOCOL, true), true, ('<_`,_`,_>['nil.DataList,'__['&11:Data,'&12:NeDataList],'_+_['1.Nat,'&13:Nat]] | '&13:Nat ?= 'len['&12:NeDataList] /\ 'N'&14:Nat ?= '_+_['len['&12:NeDataList],'len['&11:Data]] /\ 'N'&14:Nat != '_+_['1.Nat,'&13:Nat]), ('<_`,_`,_>['nil.DataList,'__['&11:Data,'&12:NeDataList],'N&15:Nat] | 'N&15:Nat ?= 'N'&14:Nat)) .
result FOFormSubstPair: ('N'&14:Nat ?= '_+_['1.Nat,'&13:Nat],
  'N&15:Nat <- '_+_['1.Nat,'&13:Nat])
==========================================
reduce in RLTOOL : extract-clause-sub(upModule('DUMB-COMM-PROTOCOL, true), 'N'&14:Nat ?= '_+_['1.Nat,'&13:Nat] \/ '&13:Nat != 'len['&12:NeDataList] \/ 'N'&14:Nat != '_+_['len['&12:NeDataList],'len['&11:Data]]) .
result PosDisj: ff \/ '_+_['1.Nat,'len['&12:NeDataList]] ?= '_+_['len['&12:NeDataList],'len['&11:Data]]
==========================================
reduce in RLTOOL : subsume?(mod(upModule('DUMB-COMM-PROTOCOL, true)) ; reg('validity |-> (upModule('DUMB-COMM-PROTOCOL, true),'impsimp,upModule('FOFORMSIMPLIFY, true))), '&11:Data ; '&12:NeDataList ; 'N&14:Nat, ('<_`,_`,_>['nil.DataList,'__['&11:Data,'&12:NeDataList],'_+_['1.Nat,'&13:Nat]] | '&13:Nat ?= 'len['&12:NeDataList] /\ 'N'&14:Nat ?= '_+_['len['&12:NeDataList],'len['&11:Data]] /\ 'N'&14:Nat != '_+_['1.Nat,'&13:Nat]) => ('<_`,_`,_>['nil.DataList,'__['&11:Data,'&12:NeDataList],'N&15:Nat] | 'N&15:Nat ?= 'N'&14:Nat)) .
result Bool: true
Bye.
