
set show advisories off .

select NAT .

red s 0 + s s 0 .
red s 0 + s 0 .
red _+_(s 0, N:Nat, s 0) .
red sd(s s 0, s s s 0) .
red sd(s_^3(0), s_^10(0)) .
red sd(s_^10(0), s_^4(0)) .
red s 0 * s s 0 .
red s 0 * s 0 .
red s_^10(0) quo s_^4(0) .
red s_^10(0) rem s_^4(0) .
red s_^10(0) ^ s_^4(0) .
red modExp(s_^37(0), s_^1000000000000002(0), s_^100(0)) .
red modExp(s_^37(0), s_^1000000000000002(0), s_^1000003(0)) .
red modExp(s_^100200300400(0), s_^1000000000000002(0), s_^1000003(0)) .
red gcd(gcd(s_^120(0), X:Nat), gcd(s_^140(0), Y:Nat)) .
red gcd(s_^124(0), s_^346(0), s_^768(0)) .
red lcm(lcm(s_^120(0), X:Nat), lcm(s_^140(0), Y:Nat)) .
red lcm(s_^124(0), s_^346(0), s_^768(0)) .
red s 0 xor s s 0 .
red s 0 xor s 0 .
red s 0 & s s 0 .
red s 0 & s 0 .
red s 0 | s s 0 .
red s 0 | s 0 .
red s 0 << s s s 0 .
red s_^128(0) >> s s s 0 .
red s 0 < s s 0 .
red s 0 < s 0 .
red s 0 <= s s 0 .
red s 0 <= s 0 .
red s 0 > s s 0 .
red s 0 > s 0 .
red s 0 >= s s 0 .
red s 0 >= s 0 .
red s_^3(0) divides s_^10(0) .
red s_^3(0) divides s_^9(0) .

fmod FACT is
  inc NAT .
  op _! : Nat -> NzNat .

var N : Nat .
  eq 0 ! = s 0 .
  eq (s N) ! = s N * N ! .
endfm

red s_^100(0) ! .
red s_^1000(0) ! .

fmod MOD3 is
  inc NAT .

  eq s_^3(0) = 0 .
endfm

red s_^4(0) .

fmod FACT' is
  inc NAT .
  op _! : Nat -> NzNat .

var N : Nat .
  eq 0 ! = 1 .
  eq (s N) ! = (s N) * N ! .
endfm

red 100 ! .
red 1000 ! .

fmod MOD3' is
  inc NAT .

  eq 3 = 0 .
endfm

red 4445 .

select NAT .

red 8888888888888888888888888888888888888888888888888888888 .

red s_^123456789(s_^123456789(0)) .

select NAT .

set print graph on .

red 123 .

set trace on .
set trace whole on .

red 4 + 5 .

set trace off .
set print graph off .
