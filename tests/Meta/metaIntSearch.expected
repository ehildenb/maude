==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 0 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 3
result Configuration: <> < me : User | none > gotSearchResult(me, interpreter(
    0), 0, 'a.State, 'State, 
  'X:State <- 'a.State)
==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 1 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 4
result Configuration: <> < me : User | none > gotSearchResult(me, interpreter(
    0), 1, 'b.State, 'State, 
  'X:State <- 'b.State)
==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 2 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 5
result Configuration: <> < me : User | none > gotSearchResult(me, interpreter(
    0), 2, 'c.State, 'State, 
  'X:State <- 'c.State)
==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 3 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 6
result Configuration: <> < me : User | none > gotSearchResult(me, interpreter(
    0), 3, 'd.State, 'State, 
  'X:State <- 'd.State)
==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 4 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 7
result Configuration: <> < me : User | none > gotSearchResult(me, interpreter(
    0), 4, 'e.State, 'State, 
  'X:State <- 'e.State)
==========================================
erewrite in SEARCH-TEST : <> < me : User | soln: 5 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 7
result Configuration: <> < me : User | none > noSuchResult(me, interpreter(0),
    4)
==========================================
erewrite in SEARCH-CACHE-TEST : <> < me : User | soln: 0 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 17
result Configuration: <> < me : User | soln: 6,got: gotSearchResult(me,
    interpreter(0), 0, 'a.State, 'State, 
  'X:State <- 'a.State),got: gotSearchResult(me, interpreter(0), 1, 'b.State,
    'State, 
  'X:State <- 'b.State),got: gotSearchResult(me, interpreter(0), 1, 'c.State,
    'State, 
  'X:State <- 'c.State),got: gotSearchResult(me, interpreter(0), 1, 'd.State,
    'State, 
  'X:State <- 'd.State),got: gotSearchResult(me, interpreter(0), 1, 'e.State,
    'State, 
  'X:State <- 'e.State) > noSuchResult(me, interpreter(0), 0)
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 0 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 3
result Configuration: <> < me : User | none > gotSearchResultAndPath(me,
    interpreter(0), 0, 'a.State, 'State, 
  'X:State <- 'a.State, nil)
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 1 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 4
result Configuration: <> < me : User | none > gotSearchResultAndPath(me,
    interpreter(0), 1, 'b.State, 'State, 
  'X:State <- 'b.State, {'a.State,'State,rl 'a.State => 'b.State [label(
    'a-move1)] .})
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 2 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 5
result Configuration: <> < me : User | none > gotSearchResultAndPath(me,
    interpreter(0), 2, 'c.State, 'State, 
  'X:State <- 'c.State, {'a.State,'State,rl 'a.State => 'c.State [label(
    'a-move2)] .})
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 3 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 6
result Configuration: <> < me : User | none > gotSearchResultAndPath(me,
    interpreter(0), 3, 'd.State, 'State, 
  'X:State <- 'd.State, {'a.State,'State,rl 'a.State => 'b.State [label(
    'a-move1)] .}
{'b.State,'State,rl 'b.State => 'd.State [label('b-move)] .})
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 4 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 7
result Configuration: <> < me : User | none > gotSearchResultAndPath(me,
    interpreter(0), 4, 'e.State, 'State, 
  'X:State <- 'e.State, {'a.State,'State,rl 'a.State => 'c.State [label(
    'a-move2)] .}
{'c.State,'State,rl 'c.State => 'e.State [label('c-move)] .})
==========================================
erewrite in SEARCH-PATH-TEST : <> < me : User | soln: 5 > createInterpreter(
    interpreterManager, me, none) .
rewrites: 7
result Configuration: <> < me : User | none > noSuchResult(me, interpreter(0),
    4)
==========================================
erewrite in SEARCH-PATH-CACHE-TEST : <> < me : User | soln: 0 >
    createInterpreter(interpreterManager, me, none) .
rewrites: 17
result Configuration: <> < me : User | soln: 6,got: gotSearchResultAndPath(me,
    interpreter(0), 0, 'a.State, 'State, 
  'X:State <- 'a.State, nil),got: gotSearchResultAndPath(me, interpreter(0), 1,
    'b.State, 'State, 
  'X:State <- 'b.State, {'a.State,'State,rl 'a.State => 'b.State [label(
    'a-move1)] .}),got: gotSearchResultAndPath(me, interpreter(0), 1, 'c.State,
    'State, 
  'X:State <- 'c.State, {'a.State,'State,rl 'a.State => 'c.State [label(
    'a-move2)] .}),got: gotSearchResultAndPath(me, interpreter(0), 1, 'd.State,
    'State, 
  'X:State <- 'd.State, {'a.State,'State,rl 'a.State => 'b.State [label(
    'a-move1)] .}
{'b.State,'State,rl 'b.State => 'd.State [label('b-move)] .}),got:
    gotSearchResultAndPath(me, interpreter(0), 1, 'e.State, 'State, 
  'X:State <- 'e.State, {'a.State,'State,rl 'a.State => 'c.State [label(
    'a-move2)] .}
{'c.State,'State,rl 'c.State => 'e.State [label('c-move)] .}) > noSuchResult(
    me, interpreter(0), 0)
Bye.
