==========================================
reduce in BOUND : not unbounded < 3 .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : 3 < unbounded .
rewrites: 1
result Bool: true
==========================================
reduce in BOUND : unbounded < unbounded =/= true and unbounded < unbounded =/=
    false .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : decrement(0) .
rewrites: 0
result [Bound]: decrement(0)
==========================================
reduce in BOUND : decrement(9) .
rewrites: 1
result NzNat: 8
==========================================
reduce in BOUND : decrement(unbounded) .
rewrites: 1
result Bound: unbounded
==========================================
reduce in BOUND : continue(3,5) == 4,5 .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : continue(3,unbounded) == 4,unbounded .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : continue(3,4) :: Depth .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : continue(3,unbounded) :: Depth .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : not continue(unbounded,unbounded) :: Depth .
rewrites: 3
result Bool: true
==========================================
reduce in BOUND : not continue(5,3) :: Depth .
rewrites: 4
result Bool: true
==========================================
reduce in META-LEVEL : getRls('nonsense, upModule('EXT-CYCLE, true)) == (
    none).RuleSet .
rewrites: 23
result Bool: true
==========================================
reduce in META-LEVEL : getRls('a2b, upModule('EXT-CYCLE, true)) == rl 'f[
    'a.PreState] => 'f['b.PreState] [narrowing label('a2b)] . .
rewrites: 23
result Bool: true
==========================================
reduce in META-LEVEL : getRls('a2c, upModule('EXT-CYCLE, true)) == rl 'f[
    'a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
rl 'g['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] . .
rewrites: 23
result Bool: true
==========================================
reduce in META-LEVEL : getRls('b2c, upModule('EXT-CYCLE, true)) == rl 'f[
    'b.PreState] => 'f['c.PreState] [narrowing label('b2c)] . .
rewrites: 23
result Bool: true
==========================================
reduce in META-LEVEL : getRls('c2a, upModule('EXT-CYCLE, true)) == rl 'f[
    'c.PreState] => 'f['a.PreState] [narrowing label('c2a)] .
rl 'g['c.PreState] => 'g['a.PreState] [narrowing label('c2a)] . .
rewrites: 23
result Bool: true
==========================================
reduce in META-LEVEL : metaNarrowingApply(upModule('EXT-CYCLE, true), 'f[
    'a.PreState], empty, '#, 0) == {
  'f['b.PreState],'State,
  [],
  'a2b,(none).Substitution,(none).Substitution,
  '%
} .
rewrites: 5
result Bool: true
==========================================
reduce in META-LEVEL : metaNarrowingApply(upModule('EXT-CYCLE, true), 'f[
    'a.PreState], empty, '#, 1) == {
  'g['c.PreState],'State,
  [],
  'a2c,(none).Substitution,(none).Substitution,
  '%
} .
rewrites: 5
result Bool: true
==========================================
reduce in META-LEVEL : metaNarrowingApply(upModule('EXT-CYCLE, true), 'f[
    'a.PreState], empty, '#, 2) == (failure).NarrowingApplyResult? .
rewrites: 4
result Bool: true
==========================================
reduce in PRETTY-PRINT-MODULE : printModule('EXT-CYCLE, mixfix flat number rat
    qid-as-id) .
rewrites: 5
result NeQidList: 'mod 'EXT-CYCLE 'is 'extending 'CYCLE '. 'sorts 'none '.
    'none 'op 'g ': 'PreState '-> 'State '`[ 'none '`] '. 'none 'none 'rl 'g
    '`[ 'a.PreState '`] '=> 'g '`[ 'c.PreState '`] '`[ 'narrowing 'label '`(
    'a2c '`) '`] '. 'rl 'g '`[ 'c.PreState '`] '=> 'g '`[ 'a.PreState '`] '`[
    'narrowing 'label '`( 'c2a '`) '`] '. 'endm
==========================================
reduce in PRETTY-PRINT-MODULE : printModule('EXT-CYCLE, mixfix flat number rat)
    .
rewrites: 5
result NeQidList: 'mod ''EXT-CYCLE 'is 'extending ''CYCLE '. 'sorts 'none '.
    'none 'op ''g ': ''PreState '-> ''State '`[ 'none '`] '. 'none 'none 'rl
    ''g '`[ ''a.PreState '`] '=> ''g '`[ ''c.PreState '`] '`[ 'narrowing 'label
    '`( ''a2c '`) '`] '. 'rl ''g '`[ ''c.PreState '`] '=> ''g '`[ ''a.PreState
    '`] '`[ 'narrowing 'label '`( ''c2a '`) '`] '. 'endm
==========================================
reduce in PRETTY-PRINT-MODULE : printTokens(printModule('EXT-CYCLE, mixfix flat
    number rat qid-as-id)) .
rewrites: 6
result String: "mod EXT-CYCLE is extending CYCLE . sorts none . none op g : PreState -> State[none] . none none rl g[a.PreState] => g[c.PreState][narrowing label(a2c)] . rl g[c.PreState] => g[a.PreState][narrowing label(c2a)] . endm"
==========================================
reduce in PRETTY-PRINT-MODULE : printTokens(printModule('EXT-CYCLE, mixfix flat
    number rat)) .
rewrites: 6
result String: "mod 'EXT-CYCLE is extending 'CYCLE . sorts none . none op 'g : 'PreState -> 'State[none] . none none rl 'g['a.PreState] => 'g['c.PreState][narrowing label('a2c)] . rl 'g['c.PreState] => 'g['a.PreState][narrowing label('c2a)] . endm"
Bye.
