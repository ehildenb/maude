==========================================
get variants in FVP-NAT : N .

Variant #1
rewrites: 0
Nat: #1:Nat
N --> #1:Nat

No more variants.
rewrites: 0
==========================================
get variants in FVP-NAT : N monus M .

Variant #1
rewrites: 0
Nat: #1:Nat monus #2:Nat
N --> #1:Nat
M --> #2:Nat

Variant #2
rewrites: 2
Nat: 0
N --> %1:Nat
M --> %1:Nat + %2:Nat

Variant #3
rewrites: 2
Nat: %2:Nat
N --> %1:Nat + %2:Nat
M --> %1:Nat

No more variants.
rewrites: 2
==========================================
get variants in FVP-NAT : min(M, NzN:NzNat) .

Variant #1
rewrites: 0
Nat: min(#1:Nat, #2:NzNat)
M --> #1:Nat
NzN:NzNat --> #2:NzNat

Variant #2
rewrites: 4
Nat: min(%1:Nat, %2:NzNat)
M --> min(%1:Nat, %3:Nat + min(%1:Nat, %2:NzNat))
NzN:NzNat --> %2:NzNat

Variant #3
rewrites: 4
NzNat: %1:NzNat
M --> %1:NzNat
NzN:NzNat --> %2:Nat + %1:NzNat

Variant #4
rewrites: 4
Nat: %1:Nat
M --> %1:Nat
NzN:NzNat --> %1:Nat + %2:NzNat

Variant #5
rewrites: 4
NzNat: %1:NzNat
M --> %2:Nat + %1:NzNat
NzN:NzNat --> %1:NzNat

No more variants.
rewrites: 4
==========================================
get variants in FVP-NAT : max(NzN:NzNat, 1 + NzN:NzNat) .

Variant #1
rewrites: 1
NzNat: 1 + #1:NzNat
NzN:NzNat --> #1:NzNat

No more variants.
rewrites: 1
==========================================
get variants in FVP-NAT : min(N, M) + max(N, M) .

Variant #1
rewrites: 0
Nat: min(#1:Nat, #2:Nat) + max(#1:Nat, #2:Nat)
N --> #1:Nat
M --> #2:Nat

Variant #2
rewrites: 8
Nat: min(%1:Nat, %2:Nat) + max(%2:Nat, min(%1:Nat, %3:Nat + min(%1:Nat,
    %2:Nat)))
N --> min(%1:Nat, %3:Nat + min(%1:Nat, %2:Nat))
M --> %2:Nat

Variant #3
rewrites: 8
Nat: min(%1:Nat, %2:Nat) + max(%1:Nat, min(%2:Nat, %3:Nat + min(%1:Nat,
    %2:Nat)))
N --> %1:Nat
M --> min(%2:Nat, %3:Nat + min(%1:Nat, %2:Nat))

Variant #4
rewrites: 8
Nat: %1:Nat + %1:Nat + %2:Nat
N --> %1:Nat
M --> %1:Nat + %2:Nat

Variant #5
rewrites: 8
Nat: %1:Nat + %1:Nat + %2:Nat
N --> %1:Nat + %2:Nat
M --> %1:Nat

Variant #6
rewrites: 8
Nat: %3:Nat + min(%2:Nat, max(%1:Nat, %3:Nat + max(%1:Nat, %2:Nat))) + max(
    %1:Nat, %2:Nat)
N --> max(%1:Nat, %3:Nat + max(%1:Nat, %2:Nat))
M --> %2:Nat

Variant #7
rewrites: 8
Nat: %3:Nat + min(%1:Nat, max(%2:Nat, %3:Nat + max(%1:Nat, %2:Nat))) + max(
    %1:Nat, %2:Nat)
N --> %1:Nat
M --> max(%2:Nat, %3:Nat + max(%1:Nat, %2:Nat))

No more variants.
rewrites: 8
==========================================
get variants in FVP-NAT-MULT : N * M:Nat .

Variant #1
rewrites: 0
Nat: #1:Nat * #2:Nat
N --> #1:Nat
M:Nat --> #2:Nat

Variant #2
rewrites: 4
Nat: 0
N --> 0
M:Nat --> %1:Nat

Variant #3
rewrites: 4
Nat: 0
N --> %1:Nat
M:Nat --> 0

Variant #4
rewrites: 4
Nat: %1:Nat
N --> 1
M:Nat --> %1:Nat

Variant #5
rewrites: 4
Nat: %1:Nat
N --> %1:Nat
M:Nat --> 1

No more variants.
rewrites: 4
==========================================
get variants in FVP-NAT-MULT : M:Nat * 1 + NzN .

Variant #1
rewrites: 2
Nat: #1:Nat + #1:Nat * #2:NzNat
M:Nat --> #1:Nat
NzN --> #2:NzNat

Variant #2
rewrites: 5
Nat: 0
M:Nat --> 0
NzN --> %1:NzNat

Variant #3
rewrites: 5
NzNat: 1 + %1:NzNat
M:Nat --> 1
NzN --> %1:NzNat

Variant #4
rewrites: 5
Nat: %1:Nat + %1:Nat
M:Nat --> %1:Nat
NzN --> 1

No more variants.
rewrites: 5
==========================================
get variants in FVP-NUMBERS : 3 .

Variant #1
rewrites: 4
NzNat: 1 + 1 + 1

No more variants.
rewrites: 4
==========================================
get variants in FVP-INT : I - N .

Variant #1
rewrites: 1
Int: #1:Int + - #2:Nat
I --> #1:Int
N --> #2:Nat

Variant #2
rewrites: 4
NzNeg: - (%1:NzNat + %2:NzNat)
I --> - %1:NzNat
N --> %2:NzNat

Variant #3
rewrites: 4
Int: - %2:Nat
I --> %1:NzNat
N --> %1:NzNat + %2:Nat

Variant #4
rewrites: 4
Int: %1:Int
I --> %1:Int
N --> 0

Variant #5
rewrites: 5
Nat: 0
I --> #1:NzNat
N --> #1:NzNat

No more variants.
rewrites: 5
==========================================
get variants in FVP-INT : min(N:Int, M:Int) + max(N:Int, M:Int) .

Variant #1
rewrites: 0
Int: min(#1:Int, #2:Int) + max(#1:Int, #2:Int)
N:Int --> #1:Int
M:Int --> #2:Int

Variant #2
rewrites: 14
Int: %2:Nat + - %1:NzNat
N:Int --> %2:Nat
M:Int --> - %1:NzNat

Variant #3
rewrites: 14
Int: %2:Nat + - %1:NzNat
N:Int --> - %1:NzNat
M:Int --> %2:Nat

Variant #4
rewrites: 14
Int: - min(%1:NzNat, %2:NzNat) + - max(%1:NzNat, %2:NzNat)
N:Int --> - %1:NzNat
M:Int --> - %2:NzNat

Variant #5
rewrites: 14
Nat: min(%1:Nat, %2:Nat) + max(%2:Nat, min(%1:Nat, %3:Nat + min(%1:Nat,
    %2:Nat)))
N:Int --> min(%1:Nat, %3:Nat + min(%1:Nat, %2:Nat))
M:Int --> %2:Nat

Variant #6
rewrites: 14
Nat: min(%1:Nat, %2:Nat) + max(%1:Nat, min(%2:Nat, %3:Nat + min(%1:Nat,
    %2:Nat)))
N:Int --> %1:Nat
M:Int --> min(%2:Nat, %3:Nat + min(%1:Nat, %2:Nat))

Variant #7
rewrites: 14
Nat: %1:Nat + %1:Nat + %2:Nat
N:Int --> %1:Nat
M:Int --> %1:Nat + %2:Nat

Variant #8
rewrites: 14
Nat: %1:Nat + %1:Nat + %2:Nat
N:Int --> %1:Nat + %2:Nat
M:Int --> %1:Nat

Variant #9
rewrites: 14
Nat: %3:Nat + min(%2:Nat, max(%1:Nat, %3:Nat + max(%1:Nat, %2:Nat))) + max(
    %1:Nat, %2:Nat)
N:Int --> max(%1:Nat, %3:Nat + max(%1:Nat, %2:Nat))
M:Int --> %2:Nat

Variant #10
rewrites: 14
Nat: %3:Nat + min(%1:Nat, max(%2:Nat, %3:Nat + max(%1:Nat, %2:Nat))) + max(
    %1:Nat, %2:Nat)
N:Int --> %1:Nat
M:Int --> max(%2:Nat, %3:Nat + max(%1:Nat, %2:Nat))

Variant #11
rewrites: 22
Int: - #2:Nat
N:Int --> #1:NzNat
M:Int --> - (#1:NzNat + #2:Nat)

Variant #12
rewrites: 22
Int: - #2:Nat
N:Int --> - (#1:NzNat + #2:Nat)
M:Int --> #1:NzNat

Variant #13
rewrites: 22
NzNeg: - (#1:NzNat + #1:NzNat + #2:Nat)
N:Int --> - #1:NzNat
M:Int --> - (#1:NzNat + #2:Nat)

Variant #14
rewrites: 22
NzNeg: - (#1:NzNat + #1:NzNat + #2:Nat)
N:Int --> - (#1:NzNat + #2:Nat)
M:Int --> - #1:NzNat

Variant #15
rewrites: 24
Nat: 0
N:Int --> %1:NzNat
M:Int --> - %1:NzNat

Variant #16
rewrites: 24
Nat: 0
N:Int --> - %1:NzNat
M:Int --> %1:NzNat

No more variants.
rewrites: 24
==========================================
get variants in FVP-INT-MULT : NzI * NzN:NzNat .

Variant #1
rewrites: 0
Int: #1:NzInt * #2:NzNat
NzI --> #1:NzInt
NzN:NzNat --> #2:NzNat

Variant #2
rewrites: 2
NzNat: %1:NzNat
NzI --> 1
NzN:NzNat --> %1:NzNat

Variant #3
rewrites: 2
NzInt: %1:NzInt
NzI --> %1:NzInt
NzN:NzNat --> 1

No more variants.
rewrites: 2
==========================================
get variants in FVP-NAT-PRED : NzN < N + NzN .

Variant #1
rewrites: 0
Bool: #1:NzNat < #2:Nat + #1:NzNat
NzN --> #1:NzNat
N --> #2:Nat

Variant #2
rewrites: 2
Bool: true
NzN --> %1:NzNat
N --> %2:NzNat

Variant #3
rewrites: 2
Bool: false
NzN --> %1:NzNat
N --> 0

No more variants.
rewrites: 2
==========================================
get variants in FVP-NAT-PRED : N < NzN .

Variant #1
rewrites: 0
Bool: #1:Nat < #2:NzNat
N --> #1:Nat
NzN --> #2:NzNat

Variant #2
rewrites: 2
Bool: true
N --> %1:Nat
NzN --> %1:Nat + %2:NzNat

Variant #3
rewrites: 2
Bool: false
N --> %2:Nat + %1:NzNat
NzN --> %1:NzNat

No more variants.
rewrites: 2
==========================================
get variants in FVP-NAT-PRED : NzN <= N + NzN .

Variant #1
rewrites: 1
Bool: true
NzN --> #1:NzNat
N --> #2:Nat

No more variants.
rewrites: 1
==========================================
get variants in FVP-NAT-PRED : N <= NzN .

Variant #1
rewrites: 0
Bool: #1:Nat <= #2:NzNat
N --> #1:Nat
NzN --> #2:NzNat

Variant #2
rewrites: 3
Bool: true
N --> %1:NzNat
NzN --> %2:Nat + %1:NzNat

Variant #3
rewrites: 3
Bool: true
N --> %1:Nat
NzN --> %1:Nat + %2:NzNat

Variant #4
rewrites: 3
Bool: false
N --> %1:NzNat + %2:NzNat
NzN --> %1:NzNat

No more variants.
rewrites: 3
==========================================
get variants in FVP-INT-PRED : I < NzI:NzInt .

Variant #1
rewrites: 0
Bool: #1:Int < #2:NzInt
I --> #1:Int
NzI:NzInt --> #2:NzInt

Variant #2
rewrites: 5
Bool: true
I --> - %1:NzNat
NzI:NzInt --> %2:NzNat

Variant #3
rewrites: 5
Bool: false
I --> %2:Nat
NzI:NzInt --> - %1:NzNat

Variant #4
rewrites: 5
Bool: %2:NzNat < %1:NzNat
I --> - %1:NzNat
NzI:NzInt --> - %2:NzNat

Variant #5
rewrites: 5
Bool: true
I --> %2:Nat
NzI:NzInt --> %1:NzNat + %2:Nat

Variant #6
rewrites: 5
Bool: false
I --> %1:NzNat + %2:Nat
NzI:NzInt --> %1:NzNat

Variant #7
rewrites: 7
Bool: true
I --> - (#1:NzNat + #2:NzNat)
NzI:NzInt --> - #2:NzNat

Variant #8
rewrites: 7
Bool: false
I --> - #1:NzNat
NzI:NzInt --> - (#1:NzNat + #2:Nat)

No more variants.
rewrites: 7
==========================================
get variants in FVP-INT-PRED : NzI:NzInt < I .

Variant #1
rewrites: 0
Bool: #1:NzInt < #2:Int
NzI:NzInt --> #1:NzInt
I --> #2:Int

Variant #2
rewrites: 6
Bool: true
NzI:NzInt --> - %1:NzNat
I --> %2:Nat

Variant #3
rewrites: 6
Bool: false
NzI:NzInt --> %2:NzNat
I --> - %1:NzNat

Variant #4
rewrites: 6
Bool: %2:NzNat < %1:NzNat
NzI:NzInt --> - %1:NzNat
I --> - %2:NzNat

Variant #5
rewrites: 6
Bool: true
NzI:NzInt --> %2:NzNat
I --> %1:NzNat + %2:NzNat

Variant #6
rewrites: 6
Bool: false
NzI:NzInt --> %1:NzNat + %2:Nat
I --> %1:NzNat

Variant #7
rewrites: 6
Bool: false
NzI:NzInt --> %2:NzNat + %1:Nat
I --> %1:Nat

Variant #8
rewrites: 8
Bool: true
NzI:NzInt --> - (#1:NzNat + #2:NzNat)
I --> - #2:NzNat

Variant #9
rewrites: 8
Bool: false
NzI:NzInt --> - #1:NzNat
I --> - (#1:NzNat + #2:Nat)

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : NzI:NzInt < - NzI':NzInt .

Variant #1
rewrites: 0
Bool: #1:NzInt < - #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: false
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %2:NzNat < %1:NzNat
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #4
rewrites: 3
Bool: %2:NzInt < %1:NzNat
NzI:NzInt --> %2:NzInt
NzI':NzInt --> - %1:NzNat

Variant #5
rewrites: 8
Bool: true
NzI:NzInt --> - (#1:NzNat + #2:NzNat)
NzI':NzInt --> #2:NzNat

Variant #6
rewrites: 8
Bool: false
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> #1:NzNat + #2:Nat

Variant #7
rewrites: 8
Bool: true
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> - #2:NzNat

Variant #8
rewrites: 8
Bool: true
NzI:NzInt --> #2:NzNat
NzI':NzInt --> - (#1:NzNat + #2:NzNat)

Variant #9
rewrites: 8
Bool: false
NzI:NzInt --> #1:NzNat + #2:Nat
NzI':NzInt --> - #1:NzNat

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : - NzI:NzInt < NzI':NzInt .

Variant #1
rewrites: 0
Bool: - #1:NzInt < #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: true
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %1:NzNat < %2:NzNat
NzI:NzInt --> %2:NzNat
NzI':NzInt --> - %1:NzNat

Variant #4
rewrites: 3
Bool: %1:NzNat < %2:NzInt
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzInt

Variant #5
rewrites: 8
Bool: true
NzI:NzInt --> #1:NzNat + #2:NzNat
NzI':NzInt --> - #2:NzNat

Variant #6
rewrites: 8
Bool: false
NzI:NzInt --> #1:NzNat
NzI':NzInt --> - (#1:NzNat + #2:Nat)

Variant #7
rewrites: 8
Bool: false
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> - #1:NzNat

Variant #8
rewrites: 8
Bool: true
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> #1:NzNat + #2:NzNat

Variant #9
rewrites: 8
Bool: false
NzI:NzInt --> - (#1:NzNat + #2:Nat)
NzI':NzInt --> #1:NzNat

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : - NzI:NzInt < - NzI':NzInt .

Variant #1
rewrites: 0
Bool: - #1:NzInt < - #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: %2:NzNat < %1:NzNat
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %1:NzNat < - %2:NzInt
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzInt

Variant #4
rewrites: 3
Bool: - %2:NzInt < %1:NzNat
NzI:NzInt --> %2:NzInt
NzI':NzInt --> - %1:NzNat

Variant #5
rewrites: 9
Bool: true
NzI:NzInt --> #1:NzNat + #2:NzNat
NzI':NzInt --> #2:NzNat

Variant #6
rewrites: 9
Bool: false
NzI:NzInt --> #1:NzNat
NzI':NzInt --> #1:NzNat + #2:Nat

Variant #7
rewrites: 9
Bool: false
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> #2:NzNat

Variant #8
rewrites: 9
Bool: #2:NzNat < #1:NzNat
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> - #1:NzNat

Variant #9
rewrites: 9
Bool: true
NzI:NzInt --> #1:NzNat
NzI':NzInt --> - #2:NzNat

Variant #10
rewrites: 11
Bool: true
NzI:NzInt --> - %2:NzNat
NzI':NzInt --> - (%1:NzNat + %2:NzNat)

Variant #11
rewrites: 11
Bool: false
NzI:NzInt --> - (%1:NzNat + %2:Nat)
NzI':NzInt --> - %1:NzNat

No more variants.
rewrites: 11
==========================================
get variants in FVP-INT-PRED : I <= NzI:NzInt .

Variant #1
rewrites: 0
Bool: #1:Int <= #2:NzInt
I --> #1:Int
NzI:NzInt --> #2:NzInt

Variant #2
rewrites: 6
Bool: true
I --> - %1:NzNat
NzI:NzInt --> %2:NzNat

Variant #3
rewrites: 6
Bool: false
I --> %2:Nat
NzI:NzInt --> - %1:NzNat

Variant #4
rewrites: 6
Bool: %2:NzNat <= %1:NzNat
I --> - %1:NzNat
NzI:NzInt --> - %2:NzNat

Variant #5
rewrites: 6
Bool: true
I --> %1:NzNat
NzI:NzInt --> %1:NzNat + %2:Nat

Variant #6
rewrites: 6
Bool: true
I --> %1:Nat
NzI:NzInt --> %2:NzNat + %1:Nat

Variant #7
rewrites: 6
Bool: false
I --> %1:NzNat + %2:NzNat
NzI:NzInt --> %2:NzNat

Variant #8
rewrites: 8
Bool: true
I --> - (#1:NzNat + #2:Nat)
NzI:NzInt --> - #1:NzNat

Variant #9
rewrites: 8
Bool: false
I --> - #2:NzNat
NzI:NzInt --> - (#1:NzNat + #2:NzNat)

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : NzI:NzInt <= I .

Variant #1
rewrites: 0
Bool: #1:NzInt <= #2:Int
NzI:NzInt --> #1:NzInt
I --> #2:Int

Variant #2
rewrites: 5
Bool: true
NzI:NzInt --> - %1:NzNat
I --> %2:Nat

Variant #3
rewrites: 5
Bool: false
NzI:NzInt --> %2:NzNat
I --> - %1:NzNat

Variant #4
rewrites: 5
Bool: %2:NzNat <= %1:NzNat
NzI:NzInt --> - %1:NzNat
I --> - %2:NzNat

Variant #5
rewrites: 5
Bool: true
NzI:NzInt --> %1:NzNat
I --> %1:NzNat + %2:Nat

Variant #6
rewrites: 5
Bool: false
NzI:NzInt --> %1:NzNat + %2:Nat
I --> %2:Nat

Variant #7
rewrites: 7
Bool: true
NzI:NzInt --> - (#1:NzNat + #2:Nat)
I --> - #1:NzNat

Variant #8
rewrites: 7
Bool: false
NzI:NzInt --> - #2:NzNat
I --> - (#1:NzNat + #2:NzNat)

No more variants.
rewrites: 7
==========================================
get variants in FVP-INT-PRED : NzI:NzInt <= - NzI':NzInt .

Variant #1
rewrites: 0
Bool: #1:NzInt <= - #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: false
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %2:NzNat <= %1:NzNat
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #4
rewrites: 3
Bool: %2:NzInt <= %1:NzNat
NzI:NzInt --> %2:NzInt
NzI':NzInt --> - %1:NzNat

Variant #5
rewrites: 8
Bool: true
NzI:NzInt --> - (#1:NzNat + #2:Nat)
NzI':NzInt --> #1:NzNat

Variant #6
rewrites: 8
Bool: false
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> #1:NzNat + #2:NzNat

Variant #7
rewrites: 8
Bool: true
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> - #2:NzNat

Variant #8
rewrites: 8
Bool: true
NzI:NzInt --> #1:NzNat
NzI':NzInt --> - (#1:NzNat + #2:Nat)

Variant #9
rewrites: 8
Bool: false
NzI:NzInt --> #1:NzNat + #2:NzNat
NzI':NzInt --> - #2:NzNat

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : - NzI:NzInt <= NzI':NzInt .

Variant #1
rewrites: 0
Bool: - #1:NzInt <= #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: true
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %1:NzNat <= %2:NzNat
NzI:NzInt --> %2:NzNat
NzI':NzInt --> - %1:NzNat

Variant #4
rewrites: 3
Bool: %1:NzNat <= %2:NzInt
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzInt

Variant #5
rewrites: 8
Bool: true
NzI:NzInt --> #1:NzNat + #2:Nat
NzI':NzInt --> - #1:NzNat

Variant #6
rewrites: 8
Bool: false
NzI:NzInt --> #2:NzNat
NzI':NzInt --> - (#1:NzNat + #2:NzNat)

Variant #7
rewrites: 8
Bool: false
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> - #1:NzNat

Variant #8
rewrites: 8
Bool: true
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> #1:NzNat + #2:Nat

Variant #9
rewrites: 8
Bool: false
NzI:NzInt --> - (#1:NzNat + #2:NzNat)
NzI':NzInt --> #2:NzNat

No more variants.
rewrites: 8
==========================================
get variants in FVP-INT-PRED : - NzI:NzInt <= - NzI':NzInt .

Variant #1
rewrites: 0
Bool: - #1:NzInt <= - #2:NzInt
NzI:NzInt --> #1:NzInt
NzI':NzInt --> #2:NzInt

Variant #2
rewrites: 3
Bool: %2:NzNat <= %1:NzNat
NzI:NzInt --> %1:NzNat
NzI':NzInt --> %2:NzNat

Variant #3
rewrites: 3
Bool: %1:NzNat <= - %2:NzInt
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> %2:NzInt

Variant #4
rewrites: 3
Bool: - %2:NzInt <= %1:NzNat
NzI:NzInt --> %2:NzInt
NzI':NzInt --> - %1:NzNat

Variant #5
rewrites: 9
Bool: true
NzI:NzInt --> #1:NzNat + #2:Nat
NzI':NzInt --> #1:NzNat

Variant #6
rewrites: 9
Bool: false
NzI:NzInt --> #2:NzNat
NzI':NzInt --> #1:NzNat + #2:NzNat

Variant #7
rewrites: 9
Bool: false
NzI:NzInt --> - #1:NzNat
NzI':NzInt --> #2:NzNat

Variant #8
rewrites: 9
Bool: #2:NzNat <= #1:NzNat
NzI:NzInt --> - #2:NzNat
NzI':NzInt --> - #1:NzNat

Variant #9
rewrites: 9
Bool: true
NzI:NzInt --> #1:NzNat
NzI':NzInt --> - #2:NzNat

Variant #10
rewrites: 11
Bool: true
NzI:NzInt --> - %1:NzNat
NzI':NzInt --> - (%1:NzNat + %2:Nat)

Variant #11
rewrites: 11
Bool: false
NzI:NzInt --> - (%1:NzNat + %2:NzNat)
NzI':NzInt --> - %2:NzNat

No more variants.
rewrites: 11
==========================================
reduce in FVP-BOOL-EQFORM : true ?= true .
rewrites: 1
result TrueLit{Bool}: tt
==========================================
reduce in TEST-FVP-NAT-EQFORM : N:Nat ?= N:Nat + N':Nat .
rewrites: 0
result PosEqLit{Nat}: N:Nat ?= N:Nat + N':Nat
==========================================
reduce in TEST-FVP-NAT-EQFORM : N:Nat ?= NzN:Nat .
rewrites: 0
result PosEqLit{Nat}: N:Nat ?= NzN:Nat
==========================================
reduce in TEST-FVP-BOOL-EQFORM : true ?= N:Nat < N':Nat .
rewrites: 0
result PosEqLit{Bool}: true ?= N:Nat < N':Nat
==========================================
reduce in TEST-FVP-BOOL-EQFORM : true ?= N:Nat < N':Nat + NzN':Nat .
rewrites: 0
result PosEqLit{Bool}: true ?= N:Nat < N':Nat + NzN':Nat
==========================================
reduce in TEST-FVP-BOOL-EQFORM : true ?= N:Nat <= N':Nat /\ false ?= N:Nat <
    N':Nat .
rewrites: 0
result PosEqConj{Bool}: true ?= N:Nat <= N':Nat /\ false ?= N:Nat < N':Nat
==========================================
reduce in TEST-FVP-BOOL-EQFORM : N':Nat < N:Nat ?= N:Nat <= N':Nat .
rewrites: 0
result PosEqLit{Bool}: N':Nat < N:Nat ?= N:Nat <= N':Nat
Bye.
