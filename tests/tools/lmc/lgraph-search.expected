==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : ((B -[y]-> C
C -[z]-> D)
A -[x]-> B) :: NeLGraph .
rewrites: 1
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : (< x,A >,< y,B >),< x,A > .
rewrites: 1
result NeTransitionSet: < x,A >,< y,B >
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : B -> < x,A > .
rewrites: 1
result LEdge: B -[x]-> A
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : B -> < x,A >,< y,D > .
rewrites: 3
result NeLGraph: B -[x]-> A
B -[y]-> D
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3 < 4 .
rewrites: 1
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4 < 3 .
rewrites: 3
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3[<] < 4 .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 4[<] < 3 .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 3 < 4[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4 < 3[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3[<] < 4[<] .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4[<] < 3[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : fold(A, A) .
rewrites: 1
result Fold: .Fold
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : subsumes(A ;; B ;; C, B) .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : subsumes(A ;; B, B) .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : subsumes(B ;; E, B ;; D) .
rewrites: 6
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : subsumes(E, B ;; D) .
rewrites: 3
result [Bool]: true and subsumes(E, B)
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : step(E) .
rewrites: 1
result Transition: < x,E >
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : step(D) .
rewrites: 1
result NeTransitionSet: < y,C >,< z,G >
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> A, .Environment) .
rewrites: 2
result [Environment]: {3,3 |-> A}
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> A, 2 |-> A) .
rewrites: 5
result [Environment]: {2,2 |-> A}
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> D, 2 |-> E) .
rewrites: 5
result [Environment]: {2[<],2 |-> E}
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(2 |-> D, 4 |-> A
1 |-> D) .
rewrites: 8
result [Environment]: {1,4 |-> A
1 |-> D}
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(5 |-> E, 4 |-> A
1 |-> D) .
rewrites: 8
result [Environment]: {5,4 |-> A
1 |-> D
5 |-> E}
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 
.LGraph
| 1 |-> A
| 1
| 1 -[x]-> B
[0,unbounded]
.LGraph .
rewrites: 25
result BFS: 
1 -[x]-> 2
2 -[y]-> 2
| 1 |-> A
2 |-> B
| 3
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(A, 1) .
rewrites: 102
result [BFS]: 
1 -[x]-> 2
1 -[y]-> 3
1 -[z]-> 3
2 -[y]-> 2
3 -[y]-> 6
3 -[z]-> 7
| 1 |-> A
2 |-> B
3 |-> D
6 |-> C
7 |-> G
| 7
| 6 -[x]-> A
7 -[y]-> D
[continue(1,1)]
.LGraph
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(A, 2) .
rewrites: 126
result BFS: 
1 -[x]-> 2
1 -[y]-> 3
1 -[z]-> 3
2 -[y]-> 2
3 -[y]-> 6
3 -[z]-> 7
6 -[x]-> 1
7 -[y]-> 3
| 1 |-> A
2 |-> B
3 |-> D
6 |-> C
7 |-> G
| 9
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(A) .
rewrites: 127
result BFS: 
1 -[x]-> 2
1 -[y]-> 3
1 -[z]-> 3
2 -[y]-> 2
3 -[y]-> 6
3 -[z]-> 7
6 -[x]-> 1
7 -[y]-> 3
| 1 |-> A
2 |-> B
3 |-> D
6 |-> C
7 |-> G
| 9
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(A, unbounded) == bfs(A) .
rewrites: 254
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(C, 1) .
rewrites: 77
result [BFS]: 
1 -[x]-> 2
2 -[x]-> 1[<]
2 -[y]-> 4
2 -[z]-> 4
| 1 |-> C
2 |-> A
4 |-> D
| 5
| 4 -[y]-> C
4 -[z]-> G
[continue(1,1)]
.LGraph
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(C, 2) .
rewrites: 104
result [BFS]: 
1 -[x]-> 2
2 -[x]-> 1[<]
2 -[y]-> 4
2 -[z]-> 4
4 -[y]-> 1
4 -[z]-> 7
| 1 |-> C
2 |-> A
4 |-> D
7 |-> G
| 7
| 7 -[y]-> D
[continue(2,2)]
.LGraph
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(C) .
rewrites: 121
result BFS: 
1 -[x]-> 2
2 -[x]-> 1[<]
2 -[y]-> 4
2 -[z]-> 4
4 -[y]-> 1
4 -[z]-> 7
7 -[y]-> 4
| 1 |-> C
2 |-> A
4 |-> D
7 |-> G
| 8
Bye.
