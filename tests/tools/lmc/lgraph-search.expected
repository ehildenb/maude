==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : ((B -[y]-> C
C -[z]-> D)
A -[x]-> B) :: NeLGraph .
rewrites: 1
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : (< x,A >,< y,B >),< x,A > == < x,A >,<
    y,B > .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : B -> < x,A > == B -[x]-> A .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : B -> < x,A >,< y,D > == (B -[x]-> A
B -[y]-> D) .
rewrites: 4
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3 < 4 .
rewrites: 1
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4 < 3 .
rewrites: 3
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3[<] < 4 .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 4[<] < 3 .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 3 < 4[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4 < 3[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : 3[<] < 4[<] .
rewrites: 14
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : not 4[<] < 3[<] .
rewrites: 16
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : fold(A, A) == .Fold .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : step(E) == < x,E > .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : step(D) == < y,C >,< z,G > .
rewrites: 2
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> A, .Environment) == {3,3
    |-> A} .
rewrites: 3
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> A, 2 |-> A) == {2,2 |-> A}
    .
rewrites: 6
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(3 |-> D, 2 |-> E) == {2[<],2 |->
    E} .
rewrites: 6
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(2 |-> D, 4 |-> A 1 |-> D) == {1,4
    |-> A 1 |-> D} .
rewrites: 9
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : insert(2 |-> E, 4 |-> A 1 |-> D) == {2,4
    |-> A 1 |-> D 2 |-> E} .
rewrites: 9
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : (.LGraph | 1 |-> A | 1 | 1 -[x]-> B) ==
    (1 -[x]-> 2
2 -[y]-> 2 | 1 |-> A 2 |-> B | 3 | .LGraph) .
rewrites: 22
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(A) == (((((((6 -[x]-> 1
7 -[y]-> 3)
3 -[z]-> 7)
3 -[y]-> 6)
2 -[y]-> 2)
1 -[z]-> 3)
1 -[y]-> 3)
1 -[x]-> 2 | 1 |-> A 2 |-> B 3 |-> D 6 |-> C 7 |-> G | 9 | .LGraph) .
rewrites: 115
result Bool: true
==========================================
reduce in GRAPH-FOLDING-SEARCH-TEST1 : bfs(C) == ((((((4 -[z]-> 7
7 -[y]-> 4)
4 -[y]-> 1)
2 -[z]-> 4)
2 -[y]-> 4)
2 -[x]-> 1[<])
1 -[x]-> 2 | 1 |-> C 2 |-> A 4 |-> D 7 |-> G | 8 | .LGraph) .
rewrites: 106
result Bool: true
Bye.
