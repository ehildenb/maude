set show timing off .

load ../../../contrib/tools/lmc/lgraph-search.maude

--- Testing Harness GRAPH-FOLDING-SEARCH-TEST1
--- ==========================================

fmod GRAPH-FOLDING-SEARCH-TEST1 is
    extending GRAPH-FOLDING-SEARCH .

    ops A B C D E F G : -> State .
    ops x y z : -> Label .

    op < : -> Fold .

    eq fold(D, E) = < .
    eq fold(B, C) = < .

    eq step(A) = < x , B > , < y , D > , < z , D > .
    eq step(B) = < y , B > .
    eq step(C) = < x , A > .
    eq step(D) = < y , C > , < z , G > .
    eq step(E) = < x , E > .
    eq step(F) = < x , E > .
    eq step(G) = < y , D > .
endfm

--- Test Module LABELLED-GRAPH
--- --------------------------

reduce (A -[x]-> B B -[y]-> C C -[z]-> D) :: NeLGraph .

reduce < x , A > , < y , B > , < x , A > == < y , B > , < x , A > .

reduce B -> < x , A >             == B -[ x ]-> A .
reduce B -> < x , A > , < y , D > == (B -[ x ]-> A B -[ y ]-> D) .

--- Test Module GRAPH-FOLDING-SEARCH
--- --------------------------------

reduce fold(A, A) == id .

reduce step(3 [ F:Fold ]) == .TransitionSet .
reduce step(E) == < x , E > .
reduce step(D) == < z , G > , < y , C > .

--- Non-deterministic because _,_ is commutative.
reduce [ 0 : A -> < x , B > , < y , D > ] == ([ 0 : A -[ y ]-> D ] , [ 0 : A -[ x ]-> B ]) .

reduce (3 |-> E , [ 2 : B -[x]-> C ]) == ([ 3 : B -[x]-> C        ] , 3 |-> E) .
reduce (3 |-> E , [ 2 : B -[x]-> D ]) == ([ 3 : B -[x]-> 3[<]     ] , 3 |-> E) .
reduce (3 |-> E , [ 2 : E -[x]-> C ]) == ([ 3 : 3[id] -[x]-> C    ] , 3 |-> E) .
reduce (3 |-> E , [ 2 : E -[x]-> D ]) == ([ 2 : 3[id] -[x]-> 3[<] ] , 3 |-> E) .

--- Non-deterministic because __ is commutative.
reduce (4 |-> A, 3 |-> B , [ 0 : A -[x]-> B A -[y]-> D A -[z]-> D ])
    == (4 |-> A, 3 |-> B , [ 0 : A -[z]-> D ] , [ 0 : A -[y]-> D ] , [ 0 : A -[x]-> B ]) .

reduce (.LGraph | [ 3 : 3[id] -[x]-> 4[id] ]           | .Frontier) == (3[id] -[x]-> 4[id] | .Environment      | .Frontier) .
reduce (.LGraph | [ 3 : 3[id] -[x]-> A     ] , 3 |-> B | .Frontier) == (3[id] -[x]-> 4[id] | 4 |-> A , 3 |-> B | A) .

eof

reduce bfs(B) .
reduce bfs(C) .
reduce bfs(D) .

fmod GRAPH-FOLDING-SEARCH-TEST2 is
    extending GRAPH-FOLDING-SEARCH .

    ops A B C D E F G : -> State .
    ops x y z : -> Label .

    op < : -> Fold .

    eq fold(F, E) = < .
    eq fold(G, F) = < .

    eq step(A) = < y , C > .
    eq step(B) = < x , A > , < y , D > .
    eq step(C) = < x , E > , < z , G > , < y , F > .
    eq step(D) = < x , F > , < y , C > , < z , A > .
    eq step(E) = .TransitionSet .
    eq step(F) = .TransitionSet .
    eq step(G) = < y , E > .
endfm

reduce bfs(B) .
reduce bfs(B) .
reduce bfs(B) .
reduce bfs(B) .
reduce bfs(B) .
reduce bfs(B) .
reduce bfs(B) .
reduce bfs(C) .
