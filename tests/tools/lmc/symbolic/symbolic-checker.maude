set show timing off .

load ../../../../contrib/systems/cycle.maude
load ../../../../contrib/systems/token.maude
load ../../../../contrib/tools/lmc/symbolic-checker.maude

--- Testing META-NARROWING-INTERFACE
--- ================================

select META-NARROWING-INTERFACE .

--- Function `metaNarrow2`
--- ----------------------

--- ### System `CYCLE`

reduce metaNarrow2(upModule('CYCLE, true), 'f['a.PreState])
    == (    { 'f['b.PreState],'State, none / rl 'f['a.PreState] => 'f['b.PreState] [narrowing label('a2b)] . }
         || { 'g['c.PreState],'State, none / rl 'f['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] . }
       ) .

reduce metaNarrow2(upModule('CYCLE, true), 'f['b.PreState])
    == { 'f['c.PreState],'State, none / rl 'f['b.PreState] => 'f['c.PreState] [narrowing label('b2c)] . } .

--- ### System `BOUNDED-CYCLE`

reduce metaNarrow2(upModule('BOUNDED-CYCLE, true), '`{_`,_`}['1.Nat*, '1.Nat*])
    == { '`{_`,_`}['0.Nat*,'1.NzNat*],'State, none / rl '`{_`,_`}['_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*],'#3:Nat*] => '`{_`,_`}['#1:Nat*,'#3:Nat*] [narrowing label('rm)] . } .

reduce metaNarrow2(upModule('BOUNDED-CYCLE, true), '`{_`,_`}['N:Nat*, '_:+_['1.Nat*, '1.Nat*, '1.Nat*]])
    == (    { '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]],                             'State, 'N:Nat* <- '_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*] / rl '`{_`,_`}['_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*],'#3:Nat*]          => '`{_`,_`}['#1:Nat*,'#3:Nat*] [narrowing label('rm)] . }
         || { '`{_`,_`}['1.NzNat*,'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]],                            'State, 'N:Nat* <- '0.Nat*                            / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'1.NzNat*],'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]],           'State, 'N:Nat* <- '0.Nat*                            / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'1.NzNat*],'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]],           'State, 'N:Nat* <- '1.NzNat*                          / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*],'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]], 'State, 'N:Nat* <- '0.Nat*                            / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*],'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]], 'State, 'N:Nat* <- '1.NzNat*                          / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*],'_:+_['1.NzNat*,'1.NzNat*,'1.NzNat*]], 'State, 'N:Nat* <- '_:+_['1.NzNat*,'1.NzNat*]         / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_['#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_['#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
       ) .

reduce metaNarrow2(upModule('BOUNDED-CYCLE, true), '`{_`,_`}['N:Nat*, 'M:Nat*])
    == (    { '`{_`,_`}['#1:Nat*,'M:Nat*],'State,                                                             'N:Nat* <- '_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*]         / rl '`{_`,_`}['_:+_['1.NzNat*, '#1:Nat*,'#2:Nat*],'#3:Nat*]         => '`{_`,_`}['#1:Nat*,'#3:Nat*]                                                                                     [narrowing label('rm)]  . }
         || { '`{_`,_`}['_:+_['1.NzNat*,'N:Nat*,'#3:Nat*],'_:+_['1.NzNat*,'N:Nat*,'#2:Nat*,'#3:Nat*]],'State, 'M:Nat* <- '_:+_['1.NzNat*,'N:Nat*,'#2:Nat*,'#3:Nat*] / rl '`{_`,_`}['#1:Nat*,'_:+_['1.NzNat*,'#1:Nat*,'#2:Nat*,'#3:Nat*]] => '`{_`,_`}['_:+_[ '#1:Nat*,'_:+_['1.NzNat*,'#3:Nat*]],'_:+_['#3:Nat*,'_:+_['1.NzNat*,'_:+_[ '#1:Nat*,'#2:Nat*]]]] [narrowing label('add)] . }
       ) .

--- Function `allNarrowSteps`
--- -------------------------

--- ### System `EXT-CYCLE`

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 0)
    == allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState]) .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 0)
    == (    { 'f['b.PreState],'State,none / rl 'f['a.PreState] => 'f['b.PreState] [narrowing label('a2b)] . }
         || { 'g['c.PreState],'State,none / rl 'f['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
                                            rl 'g['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
            }
       ) .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 1)
    == ( { 'g['c.PreState],'State,none / rl 'f['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
                                         rl 'g['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
         }
       ) .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 2)
    == (empty).StepResultSet .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['c.PreState], 0)
    == ( { 'f['a.PreState],'State,none / rl 'f['c.PreState] => 'f['a.PreState] [narrowing label('c2a)] .
                                         rl 'g['c.PreState] => 'g['a.PreState] [narrowing label('c2a)] .
         }
       ) .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'g['b.PreState], 0)
    == (empty).StepResultSet .

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'g['a.PreState], 0)
    == ( { 'g['c.PreState],'State,none / rl 'f['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
                                         rl 'g['a.PreState] => 'g['c.PreState] [narrowing label('a2c)] .
         }
       ) .

--- ### System `2TOKEN`

reduce allNarrowSteps(upModule('2TOKEN, true), '`{_`}['__['$.Token, '`[_`,wait`]['a.Name]]])
    == { '`{_`}['`[_`,crit`]['a.Name]] , 'State,none / rl '`{_`}['__['$.Token,'C:Conf,'`[_`,wait`]['a.Name]]] => '`{_`}['__['C:Conf, '`[_`,crit`]['a.Name]]] [narrowing label('a-enter)] . } .

reduce allNarrowSteps(upModule('2TOKEN, true), '`{_`}['__['T:Token, 'P:Proc]])
    == (    { '`{_`}['__['$.Token,'@1:Token,'`[_`,wait`]['b.Name]]], 'State, 'P:Proc <- '`[_`,crit`]['b.Name] ; 'T:Token <- '@1:Token / rl '`{_`}['__['C:Conf,'`[_`,crit`]['b.Name]]] => '`{_`}['__['`[_`,wait`]['b.Name],'__['$.Token,'C:Conf]]] [narrowing label('b-exit)] . }
         || { '`{_`}['__['*.Token,'@1:Token,'`[_`,wait`]['a.Name]]], 'State, 'P:Proc <- '`[_`,crit`]['a.Name] ; 'T:Token <- '@1:Token / rl '`{_`}['__['C:Conf,'`[_`,crit`]['a.Name]]] => '`{_`}['__['`[_`,wait`]['a.Name],'__['*.Token,'C:Conf]]] [narrowing label('a-exit)] . }
         || { '`{_`}['`[_`,crit`]['a.Name]],'State, 'P:Proc <- '`[_`,wait`]['a.Name] ; 'T:Token <- '$.Token / rl '`{_`}['__['$.Token,'C:Conf,'`[_`,wait`]['a.Name]]] => '`{_`}['__['C:Conf,'`[_`,crit`]['a.Name]]] [narrowing label('a-enter)] . }
         || { '`{_`}['`[_`,crit`]['b.Name]],'State, 'P:Proc <- '`[_`,wait`]['b.Name] ; 'T:Token <- '*.Token / rl '`{_`}['__['*.Token,'C:Conf,'`[_`,wait`]['b.Name]]] => '`{_`}['__['C:Conf,'`[_`,crit`]['b.Name]]] [narrowing label('b-enter)] . }
       ) .
