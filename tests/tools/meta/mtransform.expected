Warning: sort declarations for operator resolveNames failed preregularity check
    on 6 out of 40 sort tuples. First such tuple is (Type).
Warning: sort declarations for operator resolveNames failed preregularity check
    on 1 out of 26 sort tuples. First such tuple is (NullDeclSet).
Warning: ctor declarations for associative operator __ are conflict on 138 out
    of 17576 sort triples. First such triple is (ModuleDeclSet, SortDeclSet,
    SortDeclSet).
==========================================
reduce in UNCONDITIONALIZE : stripConditions(asTemplate(upModule('DIJKSTRA,
    true))) .
rewrites: 110
result NeModuleDeclSet: (sorts '2Proc ; '2ProcSet ; 'Bool ; 'CProc ; 'Conf ;
    'NCProc ; 'NCProcSet ; 'Proc ; 'ProcSet ; 'State ; 'WProc ; 'WProcSet .)
subsort '2Proc < '2ProcSet .
subsort '2Proc < 'NCProc .
subsort '2ProcSet < 'NCProcSet .
subsort 'CProc < 'Proc .
subsort 'NCProc < 'NCProcSet .
subsort 'NCProc < 'Proc .
subsort 'NCProcSet < 'ProcSet .
subsort 'Proc < 'ProcSet .
subsort 'WProc < 'NCProc .
subsort 'WProc < 'WProcSet .
subsort 'WProcSet < 'NCProcSet .
eq 'safe?['P:2ProcSet] = 'false.Bool [none] .
eq 'safe?['P:WProcSet] = 'true.Bool [none] .
eq 'safe?['__['C:Proc,'P:ProcSet]] = 'false.Bool [none] .
rl '<_>['_|_['P:Proc,'PS:ProcSet]] => '`[_`]['_|_['P:Proc,'PS:ProcSet]] [label(
    'stop)] .
rl '<_>['_|_['P:Proc,'__['`{0`,try`}.WProc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{1`,try`}.WProc,'PS:ProcSet]]] [label('start1)] .
rl '<_>['_|_['P:Proc,'__['`{1`,upf`}.WProc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{2`,chf`}.2Proc,'PS:ProcSet]]] [label('set-flag1)] .
rl '<_>['_|_['P:Proc,'__['`{1`,upt`}.WProc,'PS:ProcSet]]] => '<_>['_|_[
    '`{1`,upf`}.WProc,'__['P:Proc,'PS:ProcSet]]] [label('set-turn1)] .
rl '<_>['_|_['P:Proc,'__['`{2`,chf`}.2Proc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{2`,crt`}.CProc,'PS:ProcSet]]] [label('go-crit1)] .
rl '<_>['_|_['P:Proc,'__['`{2`,chf`}.2Proc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{2`,ext`}.2Proc,'PS:ProcSet]]] [label('fail-crit1)] .
rl '<_>['_|_['P:Proc,'__['`{2`,crt`}.CProc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{2`,ext`}.2Proc,'PS:ProcSet]]] [label('done-crit1)] .
rl '<_>['_|_['P:Proc,'__['`{2`,ext`}.2Proc,'PS:ProcSet]]] => '<_>['_|_['P:Proc,
    '__['`{0`,try`}.WProc,'PS:ProcSet]]] [label('exit-crit1)] .
rl '<_>['_|_['`{0`,try`}.WProc,'PS:ProcSet]] => '<_>['_|_['`{1`,try`}.WProc,
    'PS:ProcSet]] [label('start2)] .
rl '<_>['_|_['`{0`,try`}.WProc,'__['`{1`,try`}.WProc,'PS:ProcSet]]] => '<_>[
    '_|_['`{0`,try`}.WProc,'__['`{1`,upt`}.WProc,'PS:ProcSet]]] [label(
    'chk-turn1)] .
rl '<_>['_|_['`{1`,try`}.WProc,'PS:ProcSet]] => '<_>['_|_['`{1`,upf`}.WProc,
    'PS:ProcSet]] [label('chk-turn2)] .
rl '<_>['_|_['`{1`,upf`}.WProc,'PS:ProcSet]] => '<_>['_|_['`{2`,chf`}.2Proc,
    'PS:ProcSet]] [label('set-flag2)] .
rl '<_>['_|_['`{2`,chf`}.2Proc,'2PS:2ProcSet]] => '<_>['_|_['`{2`,ext`}.2Proc,
    '2PS:2ProcSet]] [label('fail-crit2)] .
rl '<_>['_|_['`{2`,chf`}.2Proc,'WPS:WProcSet]] => '<_>['_|_['`{2`,crt`}.CProc,
    'WPS:WProcSet]] [label('go-crit2)] .
rl '<_>['_|_['`{2`,crt`}.CProc,'PS:ProcSet]] => '<_>['_|_['`{2`,ext`}.2Proc,
    'PS:ProcSet]] [label('done-crit2)] .
rl '<_>['_|_['`{2`,ext`}.2Proc,'PS:ProcSet]] => '<_>['_|_['`{0`,try`}.WProc,
    'PS:ProcSet]] [label('exit-crit2)] .
op '<_> : 'Conf -> 'State [ctor] .
op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
op '__ : '2ProcSet '2ProcSet -> '2ProcSet [assoc comm ctor id('mt.WProcSet)] .
op '__ : '2ProcSet 'WProcSet -> '2ProcSet [assoc comm ctor id('mt.WProcSet)] .
op '__ : 'NCProcSet 'NCProcSet -> 'NCProcSet [assoc comm ctor id('mt.WProcSet)]
    .
op '__ : 'ProcSet 'ProcSet -> 'ProcSet [assoc comm ctor id('mt.WProcSet)] .
op '__ : 'WProcSet 'WProcSet -> 'WProcSet [assoc comm ctor id('mt.WProcSet)] .
op '_|_ : 'Proc 'ProcSet -> 'Conf [ctor] .
op '`[_`] : 'Conf -> 'State [ctor] .
op '`{0`,try`} : nil -> 'WProc [ctor] .
op '`{1`,try`} : nil -> 'WProc [ctor] .
op '`{1`,upf`} : nil -> 'WProc [ctor] .
op '`{1`,upt`} : nil -> 'WProc [ctor] .
op '`{2`,chf`} : nil -> '2Proc [ctor] .
op '`{2`,crt`} : nil -> 'CProc [ctor] .
op '`{2`,ext`} : nil -> '2Proc [ctor] .
op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
op 'mt : nil -> 'WProcSet [none] .
op 'safe? : 'ProcSet -> 'Bool [none] .
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
==========================================
reduce in UNCONDITIONALIZE : stripConditions(asTemplate(upModule('BAKERY-FVP,
    true))) .
rewrites: 78
result NeModuleDeclSet: (sorts 'BState ; 'Bool ; 'Mode ; 'Nat ; 'NcMode ;
    'NzNat .)
subsort 'NcMode < 'Mode .
subsort 'NzNat < 'Nat .
eq '_<=_['N:Nat,'_+_['N:Nat,'N':Nat]] = 'true.Bool [variant] .
eq '_<=_['_+_['N:Nat,'NzN:NzNat],'N:Nat] = 'false.Bool [variant] .
eq '_<_['N:Nat,'_+_['N:Nat,'NzN:NzNat]] = 'true.Bool [variant] .
eq '_<_['_+_['N:Nat,'N':Nat],'N:Nat] = 'false.Bool [variant] .
eq '_monus_['N:Nat,'_+_['N:Nat,'M:Nat]] = '0.Nat [variant] .
eq '_monus_['_+_['N:Nat,'M:Nat],'N:Nat] = 'M:Nat [variant] .
eq 'max['N:Nat,'_+_['N:Nat,'M:Nat]] = '_+_['N:Nat,'M:Nat] [variant] .
eq 'min['N:Nat,'_+_['N:Nat,'M:Nat]] = 'N:Nat [variant] .
eq 's['N:Nat] = '_+_['1.NzNat,'N:Nat] [variant] .
eq 'sd['N:Nat,'_+_['N:Nat,'M:Nat]] = 'M:Nat [variant] .
rl '<_`,_`,_`,_>['P:Mode,'0.Nat,'wait.NcMode,'Y:Nat] => '<_`,_`,_`,_>['P:Mode,
    '0.Nat,'crit.Mode,'Y:Nat] [label('p2_wait1)] .
rl '<_`,_`,_`,_>['P:Mode,'X:Nat,'crit.Mode,'Y:Nat] => '<_`,_`,_`,_>['P:Mode,
    'X:Nat,'sleep.NcMode,'0.Nat] [label('p2_crit)] .
rl '<_`,_`,_`,_>['P:Mode,'X:Nat,'sleep.NcMode,'Y:Nat] => '<_`,_`,_`,_>['P:Mode,
    'X:Nat,'wait.NcMode,'_+_['1.NzNat,'X:Nat]] [label('p2_sleep)] .
rl '<_`,_`,_`,_>['P:Mode,'X:Nat,'wait.NcMode,'Y:Nat] => '<_`,_`,_`,_>['P:Mode,
    'X:Nat,'crit.Mode,'Y:Nat] [label('p2_wait2)] .
rl '<_`,_`,_`,_>['crit.Mode,'X:Nat,'Q:Mode,'Y:Nat] => '<_`,_`,_`,_>[
    'sleep.NcMode,'0.Nat,'Q:Mode,'Y:Nat] [label('p1_crit)] .
rl '<_`,_`,_`,_>['sleep.NcMode,'X:Nat,'Q:Mode,'Y:Nat] => '<_`,_`,_`,_>[
    'wait.NcMode,'_+_['1.NzNat,'Y:Nat],'Q:Mode,'Y:Nat] [label('p1_sleep)] .
rl '<_`,_`,_`,_>['wait.NcMode,'X:Nat,'Q:Mode,'0.Nat] => '<_`,_`,_`,_>[
    'crit.Mode,'X:Nat,'Q:Mode,'0.Nat] [label('p1_wait1)] .
rl '<_`,_`,_`,_>['wait.NcMode,'X:Nat,'Q:Mode,'Y:Nat] => '<_`,_`,_`,_>[
    'crit.Mode,'X:Nat,'Q:Mode,'Y:Nat] [label('p1_wait2)] .
op '0 : nil -> 'Nat [ctor] .
op '1 : nil -> 'NzNat [ctor] .
op '<_`,_`,_`,_> : 'Mode 'Nat 'Mode 'Nat -> 'BState [ctor] .
op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm ctor id('0.Nat)] .
op '_+_ : 'Nat 'NzNat -> 'NzNat [assoc comm ctor id('0.Nat)] .
op '_<=_ : 'Nat 'Nat -> 'Bool [none] .
op '_<_ : 'Nat 'Nat -> 'Bool [none] .
op '_monus_ : 'Nat 'Nat -> 'Nat [none] .
op 'crit : nil -> 'Mode [ctor] .
op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
op 'max : 'Nat 'Nat -> 'Nat [assoc comm] .
op 'min : 'Nat 'Nat -> 'Nat [assoc comm] .
op 's : 'Nat -> 'Nat [none] .
op 'sd : 'Nat 'Nat -> 'Nat [comm] .
op 'sleep : nil -> 'NcMode [ctor] .
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
op 'wait : nil -> 'NcMode [ctor] .
==========================================
reduce in UNCONDITIONALIZE : stripConditions(asTemplate(upModule('QLOCK-STATE,
    true))) .
rewrites: 4
result NeModuleDeclSet: (sorts 'Bool* ; 'Nat* ; 'NeQueue ; 'Pred ; 'Queue ;
    'Soup .)
subsort 'Nat* < 'NeQueue .
subsort 'Nat* < 'Soup .
subsort 'NeQueue < 'Queue .
eq '_in_['N:Nat*,'N:Nat*] = 'true.Pred [variant] .
eq '_in_['N:Nat*,'__['N:Nat*,'S:Soup]] = 'true.Pred [variant] .
eq 'dupl['__['N:Nat*,'N:Nat*]] = 'true.Pred [variant] .
eq 'dupl['__['N:Nat*,'N:Nat*,'S:Soup]] = 'true.Pred [variant] .
op '0 : nil -> 'Nat* [ctor] .
op '1 : nil -> 'Nat* [ctor] .
op '_:+_ : 'Nat* 'Nat* -> 'Nat* [assoc comm ctor id('0.Nat*)] .
op '_=/=_ : 'Pred 'Pred -> 'Bool* [ctor] .
op '_@_ : 'NeQueue 'NeQueue -> 'NeQueue [assoc ctor] .
op '__ : 'Soup 'Soup -> 'Soup [assoc comm ctor id('mt.Soup)] .
op '_in_ : 'Nat* 'Soup -> 'Pred [ctor] .
op 'dupl : 'Soup -> 'Pred [ctor] .
op 'mt : nil -> 'Soup [ctor] .
op 'nil : nil -> 'Queue [ctor] .
op 'true : nil -> 'Pred [ctor] .
op 'tt : nil -> 'Bool* [ctor] .
==========================================
reduce in UNCONDITIONALIZE : wellFormed(fromTemplate('DIJKSTRA,
    stripConditions(asTemplate(upModule('DIJKSTRA, true))))) .
rewrites: 114
result Bool: true
==========================================
reduce in UNCONDITIONALIZE : wellFormed(fromTemplate('BAKERY-FVP,
    stripConditions(asTemplate(upModule('BAKERY-FVP, true))))) .
rewrites: 82
result Bool: true
==========================================
reduce in UNCONDITIONALIZE : wellFormed(fromTemplate('QLOCK-STATE,
    stripConditions(asTemplate(upModule('QLOCK-STATE, true))))) .
rewrites: 8
result Bool: true
Warning: sort declarations for operator resolveNames failed preregularity check
    on 6 out of 40 sort tuples. First such tuple is (Type).
Warning: sort declarations for operator resolveNames failed preregularity check
    on 1 out of 26 sort tuples. First such tuple is (NullDeclSet).
Warning: ctor declarations for associative operator __ are conflict on 138 out
    of 17576 sort triples. First such triple is (ModuleDeclSet, SortDeclSet,
    SortDeclSet).
==========================================
reduce in DIJKSTRA-UNCONDITIONALIZED : M .
rewrites: 141
result SModule: mod 'DIJKSTRA is
  protecting 'DIJKSTRA-DATA .
  protecting 'FVP-BOOL-EQFORM .
  sorts 'CState ; 'Conf ; 'State .
  none
  op '<_> : 'Conf -> 'State [ctor] .
  op '_st_ : 'State 'Form`{Bool`} -> 'CState [ctor prec(57)] .
  op '_|_ : 'Proc 'ProcSet -> 'Conf [ctor] .
  op '`[_`] : 'Conf -> 'State [ctor] .
  none
  none
  rl '_st_['<_>['_|_['P:Proc,'PS:ProcSet]],'###COND###:Form`{Bool`}] => '_st_[
    '`[_`]['_|_['P:Proc,'PS:ProcSet]],'###COND###:Form`{Bool`}] [narrowing
    label('stop)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{0`,try`}.WProc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{1`,try`}.WProc,
    'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing label('start1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{1`,upf`}.WProc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{2`,chf`}.2Proc,
    'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing label('set-flag1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{1`,upt`}.WProc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['`{1`,upf`}.WProc,'__['P:Proc,
    'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing label('set-turn1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{2`,chf`}.2Proc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{2`,crt`}.CProc,
    'PS:ProcSet]]],'_/\_['###COND###:Form`{Bool`},'_?=_['safe?['__['P:Proc,
    'PS:ProcSet]],'true.Bool]]] [narrowing label('go-crit1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{2`,chf`}.2Proc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{2`,ext`}.2Proc,
    'PS:ProcSet]]],'_/\_['###COND###:Form`{Bool`},'_?=_['safe?['__['P:Proc,
    'PS:ProcSet]],'false.Bool]]] [narrowing label('fail-crit1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{2`,crt`}.CProc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{2`,ext`}.2Proc,
    'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing label('done-crit1)] .
  rl '_st_['<_>['_|_['P:Proc,'__['`{2`,ext`}.2Proc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['P:Proc,'__['`{0`,try`}.WProc,
    'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing label('exit-crit1)] .
  rl '_st_['<_>['_|_['`{0`,try`}.WProc,'PS:ProcSet]],'###COND###:Form`{Bool`}]
    => '_st_['<_>['_|_['`{1`,try`}.WProc,'PS:ProcSet]],
    '###COND###:Form`{Bool`}] [narrowing label('start2)] .
  rl '_st_['<_>['_|_['`{0`,try`}.WProc,'__['`{1`,try`}.WProc,'PS:ProcSet]]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['`{0`,try`}.WProc,'__[
    '`{1`,upt`}.WProc,'PS:ProcSet]]],'###COND###:Form`{Bool`}] [narrowing
    label('chk-turn1)] .
  rl '_st_['<_>['_|_['`{1`,try`}.WProc,'PS:ProcSet]],'###COND###:Form`{Bool`}]
    => '_st_['<_>['_|_['`{1`,upf`}.WProc,'PS:ProcSet]],
    '###COND###:Form`{Bool`}] [narrowing label('chk-turn2)] .
  rl '_st_['<_>['_|_['`{1`,upf`}.WProc,'PS:ProcSet]],'###COND###:Form`{Bool`}]
    => '_st_['<_>['_|_['`{2`,chf`}.2Proc,'PS:ProcSet]],
    '###COND###:Form`{Bool`}] [narrowing label('set-flag2)] .
  rl '_st_['<_>['_|_['`{2`,chf`}.2Proc,'2PS:2ProcSet]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['`{2`,ext`}.2Proc,
    '2PS:2ProcSet]],'###COND###:Form`{Bool`}] [narrowing label('fail-crit2)] .
  rl '_st_['<_>['_|_['`{2`,chf`}.2Proc,'WPS:WProcSet]],
    '###COND###:Form`{Bool`}] => '_st_['<_>['_|_['`{2`,crt`}.CProc,
    'WPS:WProcSet]],'###COND###:Form`{Bool`}] [narrowing label('go-crit2)] .
  rl '_st_['<_>['_|_['`{2`,crt`}.CProc,'PS:ProcSet]],'###COND###:Form`{Bool`}]
    => '_st_['<_>['_|_['`{2`,ext`}.2Proc,'PS:ProcSet]],
    '###COND###:Form`{Bool`}] [narrowing label('done-crit2)] .
  rl '_st_['<_>['_|_['`{2`,ext`}.2Proc,'PS:ProcSet]],'###COND###:Form`{Bool`}]
    => '_st_['<_>['_|_['`{0`,try`}.WProc,'PS:ProcSet]],
    '###COND###:Form`{Bool`}] [narrowing label('exit-crit2)] .
endm
==========================================
reduce in DIJKSTRA-UNCONDITIONALIZED : wellFormed(M) .
rewrites: 2
result Bool: true
Warning: sort declarations for operator resolveNames failed preregularity check
    on 6 out of 40 sort tuples. First such tuple is (Type).
Warning: sort declarations for operator resolveNames failed preregularity check
    on 1 out of 26 sort tuples. First such tuple is (NullDeclSet).
Warning: ctor declarations for associative operator __ are conflict on 138 out
    of 17576 sort triples. First such triple is (ModuleDeclSet, SortDeclSet,
    SortDeclSet).
==========================================
reduce in FT-COMM-UNCONDITIONALIZED : M .
rewrites: 99
result SModule: mod 'FT-COMM is
  protecting 'FT-COMM-DATA .
  protecting 'FVP-BOOL-EQFORM .
  sorts 'CState ; 'State .
  none
  op '_st_ : 'State 'Form`{Bool`} -> 'CState [ctor prec(57)] .
  op '`[_::_|_|_|_::_`] : 'Nat 'ListNat 'MaybeNat 'MaybePairNat 'ListNat 'Nat
    -> 'State [ctor] .
  none
  none
  rl '_st_['`[_::_|_|_|_::_`]['n:Nat,'l1:ListNat,'k:Nat,'pa?:MaybePairNat,
    'l2:ListNat,'m:Nat],'###COND###:Form`{Bool`}] => '_st_['`[_::_|_|_|_::_`][
    'n:Nat,'l1:ListNat,'null.MaybeNat,'pa?:MaybePairNat,'l2:ListNat,'m:Nat],
    '###COND###:Form`{Bool`}] [narrowing label('drop-ack)] .
  rl '_st_['`[_::_|_|_|_::_`]['n:Nat,'l1:ListNat,'n?:MaybeNat,'pa:PairNat,
    'l2:ListNat,'m:Nat],'###COND###:Form`{Bool`}] => '_st_['`[_::_|_|_|_::_`][
    'n:Nat,'l1:ListNat,'n?:MaybeNat,'nullp.MaybePairNat,'l2:ListNat,'m:Nat],
    '###COND###:Form`{Bool`}] [narrowing label('drop-snd)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'l:NeListNat,'n?:MaybeNat,'`[_`,_`][
    'n:Nat,'q:NzNat],'l':NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] =>
    '_st_['`[_::_|_|_|_::_`]['p:NzNat,'l:NeListNat,'q:NzNat,
    'nullp.MaybePairNat,'l':NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] [
    narrowing label('resend-ack)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'l:NeListNat,'n?:MaybeNat,'`[_`,_`][
    'n:Nat,'_+_['1.NzNat,'m:Nat]],'l':NeListNat,'m:Nat],
    '###COND###:Form`{Bool`}] => '_st_['`[_::_|_|_|_::_`]['p:NzNat,
    'l:NeListNat,'_+_['1.NzNat,'m:Nat],'nullp.MaybePairNat,'__['l':NeListNat,
    'n:Nat],'_+_['1.NzNat,'m:Nat]],'###COND###:Form`{Bool`}] [narrowing label(
    'rec-+)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'l:NeListNat,'n?:MaybeNat,'`[_`,_`][
    'n:Nat,'_+_['1.NzNat,'m:Nat]],'nil.ListNat,'m:Nat],
    '###COND###:Form`{Bool`}] => '_st_['`[_::_|_|_|_::_`]['p:NzNat,
    'l:NeListNat,'_+_['1.NzNat,'m:Nat],'nullp.MaybePairNat,'n:Nat,'_+_[
    '1.NzNat,'m:Nat]],'###COND###:Form`{Bool`}] [narrowing label('rec-1)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'n:Nat,'n?:MaybeNat,'nullp.MaybePairNat,
    'l1:ListNat,'m:Nat],'###COND###:Form`{Bool`}] => '_st_['`[_::_|_|_|_::_`][
    'p:NzNat,'n:Nat,'null.MaybeNat,'`[_`,_`]['n:Nat,'p:NzNat],'l1:ListNat,
    'm:Nat],'_/\_['###COND###:Form`{Bool`},'_?=_['_=/=_['n?:MaybeNat,'p:NzNat],
    'true.Bool]]] [narrowing label('resend-1)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'n:Nat,'p:NzNat,'pa?:MaybePairNat,
    'l:NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] => '_st_[
    '`[_::_|_|_|_::_`]['p:NzNat,'nil.ListNat,'null.MaybeNat,
    'nullp.MaybePairNat,'l:NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] [
    narrowing label('rec-ack-1)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'__['n:Nat,'l:NeListNat],'n?:MaybeNat,
    'nullp.MaybePairNat,'l1:ListNat,'m:Nat],'###COND###:Form`{Bool`}] => '_st_[
    '`[_::_|_|_|_::_`]['p:NzNat,'__['n:Nat,'l:NeListNat],'null.MaybeNat,
    '`[_`,_`]['n:Nat,'p:NzNat],'l1:ListNat,'m:Nat],'_/\_[
    '###COND###:Form`{Bool`},'_?=_['_=/=_['n?:MaybeNat,'p:NzNat],'true.Bool]]]
    [narrowing label('resend-+)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'__['n:Nat,'m:Nat],'p:NzNat,
    'pa?:MaybePairNat,'l:NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] =>
    '_st_['`[_::_|_|_|_::_`]['_+_['1.NzNat,'p:NzNat],'m:Nat,'null.MaybeNat,
    '`[_`,_`]['m:Nat,'_+_['1.NzNat,'p:NzNat]],'l:NeListNat,'q:NzNat],
    '###COND###:Form`{Bool`}] [narrowing label('rec-ack-2)] .
  rl '_st_['`[_::_|_|_|_::_`]['p:NzNat,'__['n:Nat,'m:Nat,'l':NeListNat],
    'p:NzNat,'pa?:MaybePairNat,'l:NeListNat,'q:NzNat],'###COND###:Form`{Bool`}]
    => '_st_['`[_::_|_|_|_::_`]['_+_['1.NzNat,'p:NzNat],'__['m:Nat,
    'l':NeListNat],'null.MaybeNat,'`[_`,_`]['m:Nat,'_+_['1.NzNat,'p:NzNat]],
    'l:NeListNat,'q:NzNat],'###COND###:Form`{Bool`}] [narrowing label(
    'rec-ack-+)] .
endm
==========================================
reduce in FT-COMM-UNCONDITIONALIZED : wellFormed(M) .
rewrites: 2
result Bool: true
Warning: sort declarations for operator resolveNames failed preregularity check
    on 6 out of 40 sort tuples. First such tuple is (Type).
Warning: sort declarations for operator resolveNames failed preregularity check
    on 1 out of 26 sort tuples. First such tuple is (NullDeclSet).
Warning: ctor declarations for associative operator __ are conflict on 138 out
    of 17576 sort triples. First such triple is (ModuleDeclSet, SortDeclSet,
    SortDeclSet).
==========================================
reduce in THERMOSTAT-UNCONDITIONALIZED-TEST : M .
rewrites: 93
result SModule: mod 'THERMOSTAT is
  protecting 'FVP-BOOL-EQFORM .
  protecting 'FVP-NAT-PRED .
  protecting 'FVP-NUMBERS .
  sorts 'CConf ; 'Conf ; 'DelayMode ; 'InMode ; 'Mode .
  subsort 'DelayMode < 'Mode .
  subsort 'InMode < 'Mode .
  op '<_`,_`,_> : 'Nat 'Nat 'Mode -> 'Conf [ctor] .
  op '_st_ : 'Conf 'Form`{Bool`} -> 'CConf [ctor prec(57)] .
  op '`{_`,_`,_`} : 'Nat 'Nat 'Mode -> 'Conf [ctor] .
  op 'bound : nil -> 'Nat [none] .
  op 'delay : 'InMode -> 'DelayMode [ctor] .
  op 'heat-rate : 'Mode 'Nat -> 'Nat [none] .
  op 'max : nil -> 'Nat [none] .
  op 'min : nil -> 'Nat [none] .
  op 'off : nil -> 'InMode [ctor] .
  op 'on : nil -> 'InMode [ctor] .
  op 'time-until : 'InMode -> 'Nat [none] .
  none
  none
  rl '_st_['<_`,_`,_>['TIME:Nat,'TMP:Nat,'MODE:Mode],'###COND###:Form`{Bool`}]
    => '_st_['`{_`,_`,_`}['TIME:Nat,'heat-rate['MODE:Mode,'TMP:Nat],
    'MODE:Mode],'###COND###:Form`{Bool`}] [narrowing label('tick)] .
  rl '_st_['`{_`,_`,_`}['0.Nat,'TMP:Nat,'delay['IM:InMode]],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['0.Nat,'TMP:Nat,'IM:InMode],
    '###COND###:Form`{Bool`}] [narrowing label('delay-over)] .
  rl '_st_['`{_`,_`,_`}['TIME:Nat,'TMP:Nat,'off.InMode],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['TIME:Nat,'TMP:Nat,
    'off.InMode],'_/\_['###COND###:Form`{Bool`},'_?=_['_<_['TMP:Nat,'_+_[
    'min.Nat,'bound.Nat]],'false.Bool]]] [narrowing label('inmode-off)] .
  rl '_st_['`{_`,_`,_`}['TIME:Nat,'TMP:Nat,'off.InMode],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['time-until['on.InMode],
    'TMP:Nat,'delay['on.InMode]],'_/\_['###COND###:Form`{Bool`},'_?=_['_<_[
    'TMP:Nat,'_+_['min.Nat,'bound.Nat]],'true.Bool]]] [narrowing label(
    'turning-on)] .
  rl '_st_['`{_`,_`,_`}['TIME:Nat,'TMP:Nat,'on.InMode],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['TIME:Nat,'TMP:Nat,
    'on.InMode],'_/\_['###COND###:Form`{Bool`},'_?=_['_<_['max.Nat,'_+_[
    'bound.Nat,'TMP:Nat]],'false.Bool]]] [narrowing label('inmode-on)] .
  rl '_st_['`{_`,_`,_`}['TIME:Nat,'TMP:Nat,'on.InMode],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['time-until['off.InMode],
    'TMP:Nat,'delay['off.InMode]],'_/\_['###COND###:Form`{Bool`},'_?=_['_<_[
    'max.Nat,'_+_['bound.Nat,'TMP:Nat]],'true.Bool]]] [narrowing label(
    'turning-off)] .
  rl '_st_['`{_`,_`,_`}['_+_['1.NzNat,'TIME:Nat],'TMP:Nat,'DM:DelayMode],
    '###COND###:Form`{Bool`}] => '_st_['<_`,_`,_>['TIME:Nat,'TMP:Nat,
    'DM:DelayMode],'###COND###:Form`{Bool`}] [narrowing label('delaying)] .
endm
==========================================
reduce in THERMOSTAT-UNCONDITIONALIZED-TEST : wellFormed(M) .
rewrites: 2
result Bool: true
Bye.
