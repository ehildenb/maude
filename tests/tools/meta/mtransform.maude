load ../../../contrib/systems/dijkstra.maude
load ../../../contrib/systems/bakery.maude
load ../../../contrib/systems/qlock.maude
load ../../../contrib/systems/oc.maude
load ../../../contrib/systems/thermostat.maude
load ../../../contrib/tools/meta/narrowing.maude
load ../../../contrib/tools/meta/mtransform.maude

fmod META-LEVEL-NAT-RENAMED is
   protecting META-LEVEL * ( op _+_  to _+ML_
                           , op sd   to sdML
                           , op min  to minML
                           , op max  to maxML
                           , op _<_  to _<ML_
                           , op _<=_ to _<=ML_
                           , op __   to __ML
                           , op nil  to nilML
                           ) .
endfm

select REVERSE-RULES .

reduce reverseRules(asTemplate(upModule('BAKERY-FVP, true))) .

reduce reverseRules(asTemplate(upModule('QLOCK-STATE, true))) == asTemplate(upModule('QLOCK-STATE, true)) .

reduce reverseRules(reverseRules(asTemplate(upModule('DIJKSTRA   , true)))) == asTemplate(upModule('DIJKSTRA    , true)) .
reduce reverseRules(reverseRules(asTemplate(upModule('BAKERY-FVP , true)))) == asTemplate(upModule('BAKERY-FVP  , true)) .

select STRIP-CONDITIONS .

reduce stripConditions(asTemplate(upModule('DIJKSTRA    , true))) .
reduce stripConditions(asTemplate(upModule('BAKERY-FVP  , true))) .
reduce stripConditions(asTemplate(upModule('QLOCK-STATE , true))) == asTemplate(upModule('QLOCK-STATE, true)) .

reduce wellFormed(fromTemplate('DIJKSTRA    , stripConditions(asTemplate(upModule('DIJKSTRA    , true))))) .
reduce wellFormed(fromTemplate('BAKERY-FVP  , stripConditions(asTemplate(upModule('BAKERY-FVP  , true))))) .
reduce wellFormed(fromTemplate('QLOCK-STATE , stripConditions(asTemplate(upModule('QLOCK-STATE , true))))) .

fmod DIJKSTRA-UNCONDITIONALIZED is
   protecting UNCONDITIONALIZE-FVP-BOOL .

    eq #tSort = 'State .

    op M : -> Module [memo] .
    -------------------------
    eq M = unconditionalize(upModule('DIJKSTRA, false)) .
endfm

reduce M .
reduce wellFormed(M) .

fmod FT-COMM-UNCONDITIONALIZED is
   protecting UNCONDITIONALIZE-FVP-BOOL .

    eq #tSort = 'State .

    op M : -> Module [memo] .
    -------------------------
    eq M = unconditionalize(upModule('FT-COMM, false)) .
endfm

reduce M .
reduce wellFormed(M) .

fmod THERMOSTAT-UNCONDITIONALIZED-TEST is
   protecting UNCONDITIONALIZE-FVP-BOOL .
   protecting NARROWING .

    eq #tSort = 'Conf .

    op M : -> Module [memo] .
    -------------------------
    eq M = unconditionalize(upModule('THERMOSTAT, false)) .

    op init : -> Term .
    -------------------
    eq init = '_st_['`{_`,_`,_`}['TIME:Nat, 'TMP:Nat, 'IM:InMode], '_?=_['true.Bool, '_<_['TIME:Nat, 'TMP:Nat]]] .
endfm

reduce M .
reduce wellFormed(M) .
reduce wellFormed(M, init) .
reduce narrowSteps(M, init) .
