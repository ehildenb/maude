set show timing off .

load ../../../contrib/systems/cycle.maude
load ../../../contrib/systems/token.maude
load ../../../contrib/systems/bakery.maude
load ../../../contrib/tools/meta/narrowing.maude

--- Testing Harnesses
--- =================

fmod NAT>-HARNESS is
   protecting NARROWING2 .

    op ##m## : ~> SModule [memo] .
    ------------------------------
    eq ##m## = upModule('NAT>, true) .

    op init : Nat -> [Term] .
    -------------------------
    eq init(0) = 'X:Nat> .
    eq init(1) = '_+_['1.NzNat>, 'Y:Nat>] .
    eq init(2) = 'Z:NzNat> .
    eq init(3) = '_>_[init(0), init(2)] .
    eq init(4) = '_>_[init(0), init(1)] .
    eq init(5) = '_>_[init(2), init(1)] .
    eq init(6) = '_>_['_+_[init(1), init(1)], init(1)] .
    eq init(7) = '_>_[init(0), '_+_[init(1), init(0)]] .
endfm

reduce wellFormed(##m##, init(0)) .
reduce wellFormed(##m##, init(1)) .
reduce wellFormed(##m##, init(2)) .
reduce wellFormed(##m##, init(3)) .
reduce wellFormed(##m##, init(4)) .
reduce wellFormed(##m##, init(5)) .
reduce wellFormed(##m##, init(6)) .
reduce wellFormed(##m##, init(7)) .

--- Module `VARIANT-SET`
--- ====================

--- ### Module `NAT>`

reduce metaGenVariant(##m##, init(0)) .
reduce metaGenVariant(##m##, init(1)) .
reduce metaGenVariant(##m##, init(2)) .
reduce metaGenVariant(##m##, init(3)) .
reduce metaGenVariant(##m##, init(4)) .
reduce metaGenVariant(##m##, init(5)) .
reduce metaGenVariant(##m##, init(6)) .
reduce metaGenVariant(##m##, init(7)) .

reduce getTerms(metaGenVariant(##m##, init(0))) .
reduce getTerms(metaGenVariant(##m##, init(3))) .
reduce getTerms(metaGenVariant(##m##, init(4))) .
reduce getTerms(metaGenVariant(##m##, init(5))) .
reduce getTerms(metaGenVariant(##m##, init(6))) .
reduce getTerms(metaGenVariant(##m##, init(7))) .

--- Module `NARROWNG2`
--- ==================

select NARROWING2 .

--- Function `allNarrowSteps`
--- -------------------------

--- ### System `EXT-CYCLE`

reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 0) .
reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 1) .
reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['a.PreState], 2) .
reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'f['c.PreState], 0) .
reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'g['b.PreState], 0) .
reduce allNarrowSteps(upModule('EXT-CYCLE, true), 'g['a.PreState], 0) .

--- ### System `2TOKEN`

reduce allNarrowSteps(upModule('2TOKEN, true), '`{_`}['__['$.Token, '`[_`,wait`]['a.Name]]], 0) .
reduce allNarrowSteps(upModule('2TOKEN, true), '`{_`}['__['T:Token, 'P:Proc]], 0) .

--- Function `metaNarrow2`
--- ----------------------

reduce metaNarrow2(upModule('BAKERY, true), '_;_;_['N:Name,'N:Name,'__['`[_`]['idle.ModeIdle],'`[_`]['idle.ModeIdle]]]) .
reduce metaNarrow2(upModule('BAKERY, true), '_;_;_['N:Name,'M:Name,'IS:ProcIdleSet]) .
reduce metaNarrow2(upModule('BAKERY, true), '_;_;_['N:Name,'M:Name,'WS:ProcWaitSet]) .
